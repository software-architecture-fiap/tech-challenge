name: build-deploy-dev
on:
  issue_comment:
    types: [created]
  # pull_request:
  #   types: [opened, synchronize]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: app/web
  EKS_CLUSTER_NAME: EKS-lanchonete-cluster
  GITHUB_OUTPUT: $GITHUB_ENV

permissions:
  contents: write

jobs:
  build-deploy-dev:
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/deploy-dev' }}
    runs-on: ubuntu-latest

    steps:
      - name: Debug GitHub Event
        run: |
          echo "Event: ${{ toJson(github.event) }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check deploy-dev comment trigger and version image tag
        run: |
          echo "Development deploy detected. I will be triggering a build using commit SHA and a deployment in development environment."
          echo "tag=${{ github.sha }}-dev" >> $GITHUB_ENV
          echo "The dev version is: ${{ github.sha }}-dev"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR registry
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: private
          mask-password: true

      - name: Build and push the container image
        id: build-dev
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ github.sha }}-dev

        run: |
          source $GITHUB_ENV

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.tag }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.tag }}
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:${{ env.tag }}" >> $GITHUB_ENV

      - name: Setup Kubeconfig
        run: aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME

      - name: Deploy to development environment
        env:
          IMAGE: ${{ steps.build-dev.outputs.image }}
        run: |
          echo "Deploying to development environment..."
          IMAGE_TAG=${{ env.image }}
          echo "Image tag: $IMAGE_TAG"
          ENVIRONMENT=development
          KUSTOMIZE_DIR=$(pwd)/infra/kubernetes/development

          kubectl get namespaces $ENVIRONMENT || kubectl create namespace $ENVIRONMENT

          kustomize edit set image web=$IMAGE_TAG
          kubectl apply -k $KUSTOMIZE_DIR -n $ENVIRONMENT
          echo "Deployment to $ENVIRONMENT environment completed!"
